plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.24'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

repositories {
    mavenCentral()
    maven { 
        name = 'Forge'
        url = 'https://maven.minecraftforge.net/' 
    }
    maven { 
        name = 'Parchment'
        url = 'https://maven.parchmentmc.org' 
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
        content {
            includeGroup("dev.kosmx.player-anim")
        }
    }
}

minecraft {
    mappings channel: 'parchment', version: "${parchment_mappings_version}-${parchment_minecraft_version}"
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Minecraft Forge
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Player Animation Library (from your previous configuration)
    implementation "dev.kosmx.player-anim:player-animation-lib-forge:1.0.2-rc1+1.21"

    // Common mod dependencies you might want to include
    // implementation fg.deobf("curse.maven:specific-mod-id:file-number")
    // implementation fg.deobf("dev.some:modid:version")

    // JUnit for testing (optional)
    testImplementation 'junit:junit:4.13.2'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
}

// Rest of your previous configuration
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        forge_version          : forge_version,
        forge_version_range    : forge_version_range,
        loader_version_range   : loader_version_range,
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_license            : mod_license,
        mod_version            : mod_version,
        mod_authors            : mod_authors,
        mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
